# Backend Environment Configuration Template
# Copy this file to .env and update with your actual values

# =============================================================================
# SERVER CONFIGURATION
# =============================================================================
# Port for the backend server
PORT=3001
# Node environment: development, production, test
NODE_ENV=development

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================
# PostgreSQL connection string
# Format: postgresql://username:password@host:port/database
DATABASE_URL=postgresql://booking_swap:P@ssword123@localhost:5432/booking_swap_db

# Redis connection string for caching and sessions
REDIS_URL=redis://localhost:6379

# =============================================================================
# HEDERA BLOCKCHAIN CONFIGURATION
# =============================================================================
# Hedera network: testnet, mainnet, previewnet
HEDERA_NETWORK=testnet
# Your Hedera account ID (format: 0.0.123456)
HEDERA_ACCOUNT_ID=0.0.6199687
# Your Hedera account private key (DER encoded)
HEDERA_PRIVATE_KEY=302e020100300506032b6570042204200d011c720c7f83813569957825c8da8ce95bc4e8f17fc4a44d4614d7b7e60c70
# Hedera topic ID for consensus service (format: 0.0.123456)
HEDERA_TOPIC_ID=0.0.6884561

# =============================================================================
# JWT AUTHENTICATION CONFIGURATION
# =============================================================================
# Secret key for JWT token signing (minimum 32 characters recommended)
JWT_SECRET=E4p+9jdS5T82WGwa00WI8fZoMTQXQuXbkclBLrxCe64=
# JWT token expiration time (e.g., 24h, 7d, 30m)
JWT_EXPIRES_IN=24h

# =============================================================================
# EXTERNAL API CONFIGURATION
# =============================================================================
# API key for booking provider integration
BOOKING_PROVIDER_API_KEY=your_api_key_here

# =============================================================================
# LOGGING CONFIGURATION
# =============================================================================
# Log level: error, warn, info, debug
LOG_LEVEL=info

# =============================================================================
# TESTING CONFIGURATION
# =============================================================================
# Disable fraud detection for testing purposes
DISABLE_FRAUD_DETECTION=true

# =============================================================================
# SWAP EXPIRATION SERVICE CONFIGURATION
# =============================================================================
# Enable automatic swap expiration processing
SWAP_EXPIRATION_ENABLED=true
# How often to check for expired swaps (in minutes)
SWAP_EXPIRATION_CHECK_INTERVAL_MINUTES=5
# Delay before starting expiration service on startup (in milliseconds)
SWAP_EXPIRATION_STARTUP_DELAY_MS=10000
# Timeout for graceful shutdown (in milliseconds)
SWAP_EXPIRATION_SHUTDOWN_TIMEOUT_MS=30000
# Enable detailed logging for expiration service
SWAP_EXPIRATION_ENABLE_DETAILED_LOGGING=false
# Enable metrics collection for expiration service
SWAP_EXPIRATION_ENABLE_METRICS=true

# =============================================================================
# FEATURE FLAGS BACKEND NOTES
# =============================================================================
#
# IMPORTANT: The backend does NOT use feature flags for API endpoints.
# All auction and cash swap functionality remains fully operational regardless
# of frontend feature flag settings.
#
# This design ensures:
# 1. Existing data continues to work normally
# 2. API endpoints remain stable and functional
# 3. Features can be re-enabled without backend changes
# 4. No database migrations or schema changes are required
#
# The frontend feature flags (VITE_ENABLE_*) control only UI visibility.
# Backend services continue to process all swap types and payment methods.
#
# =============================================================================